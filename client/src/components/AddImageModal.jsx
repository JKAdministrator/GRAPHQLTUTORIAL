import { useState } from "react";
import { useQuery, useMutation } from "@apollo/client";
import { GET_IMAGES } from "../queries/imageQueries";
import { ADD_IMAGE } from "../mutations/imageMutations";

import { FaRegFileImage, FaTrash, FaCloudUploadAlt } from "react-icons/fa";
import ImageUploading from "react-images-uploading";

const MAX_IMAGE_FOR_FRAME_NUMBER = 1;
export default function AddImageModal() {
  const [publicId, setPublicId] = useState("");
  const [secureUrl, setSecureUrl] = useState("");
  const [images, setImages] = useState([]);

  const [addImage] = useMutation(ADD_IMAGE, {
    variables: {
      public_id: publicId,
      secure_url: secureUrl,
      base64Data: images.length === 0 ? "" : images[0].data_url,
    },
    update(cache, { data: { addImage } }) {
      const { images } = cache.readQuery({
        query: GET_IMAGES,
      });
      cache.writeQuery({
        query: GET_IMAGES,
        data: { images: [...images, addImage] },
      });
    },
  });

  const onSubmit = (e) => {
    e.preventDefault();
    addImage(publicId, secureUrl);
    resetModal();
  };

  const onImageChange = (imageList, addUpdateIndex) => {
    setImages(imageList);
  };

  const resetModal = () => {
    setSecureUrl("");
    setPublicId("");
    setImages([]);
  };

  return (
    <>
      <button
        type="button"
        className="btn btn-secondary"
        data-bs-toggle="modal"
        data-bs-target="#addImageModal"
      >
        <div className="d-flex align-items-center">
          <FaRegFileImage className="icon" />
          <div>Add Image</div>
        </div>
      </button>

      <div
        className="modal fade"
        id="addImageModal"
        aria-labelledby="addImageModalLabel"
        aria-hidden="true"
        data-bs-backdrop="static"
        data-bs-keyboard="false"
        tabIndex="-1"
      >
        <div className="modal-dialog modal-dialog-scrollable modal-fullscreen-md-down">
          <div className="modal-content">
            <div className="modal-header">
              <h5 className="modal-title" id="addImageModalLabel">
                Add Image
              </h5>
              <button
                type="button"
                className="btn-close"
                data-bs-dismiss="modal"
                aria-label="Close"
                onClick={resetModal}
              ></button>
            </div>
            <div className="modal-body">
              <form onSubmit={onSubmit} autoComplete="off">
                <div className="mb-3">
                  <label className="form-label">Secure URL</label>
                  <input
                    type="text"
                    className="form-control"
                    id="name"
                    value={secureUrl}
                    disabled
                    autoComplete="off"
                    placeholder="Autogenerated when the image is created"
                    onChange={(e) => setSecureUrl(e.target.value)}
                  />
                </div>
                <div className="mb-3">
                  <label className="form-label">Public Id</label>
                  <input
                    type="text"
                    className="form-control"
                    id="detail"
                    value={publicId}
                    disabled
                    autoComplete="off"
                    placeholder="Autogenerated when the image is created"
                    onChange={(e) => setPublicId(e.target.value)}
                  />
                </div>

                <div
                  className="container-fluid d-flex flex-row p-0 gap-2 align-items-center"
                  style={{
                    minHeight: "2rem",
                  }}
                >
                  {images?.length === 0 && (
                    <small>At least 1 image must be added</small>
                  )}
                </div>
                <div className="d-flex flex-column p-1 mb-3">
                  <ImageUploading
                    multiple
                    value={images}
                    onChange={onImageChange}
                    maxNumber={MAX_IMAGE_FOR_FRAME_NUMBER}
                    dataURLKey="data_url"
                  >
                    {({
                      imageList,
                      onImageUpload,
                      onImageRemoveAll,
                      onImageUpdate,
                      onImageRemove,
                      isDragging,
                      dragProps,
                    }) => (
                      // write your building UI
                      <div
                        className="upload__image-wrapper d-flex flex-column align-items-center gap-1"
                        style={{
                          maxHeight: "8rem",
                          height: "8rem",
                          border: "1px solid whitesmoke",
                          borderRadius: "6px",
                        }}
                      >
                        {imageList?.length === 0 && (
                          <button
                            style={
                              (isDragging ? { color: "red" } : undefined,
                              {
                                width: "100%",
                                height: "100%",
                              })
                            }
                            onClick={onImageUpload}
                            {...dragProps}
                            type="button"
                            className="btn btn-light d-flex flex-column align-items-center justify-content-center"
                            disabled={imageList.length === 3 ? true : false}
                          >
                            <FaCloudUploadAlt
                              className="icon"
                              style={{
                                fontSize: "50px",
                              }}
                            />
                            <small>Click or Drag and Drop to upload</small>
                          </button>
                        )}

                        {imageList?.length > 0 &&
                          imageList.map((image, index) => (
                            <div
                              key={index}
                              className="image-item d-flex align-items-center"
                              style={{
                                position: "relative",
                                height: "max-content",
                                width: "8rem",
                                height: "8rem",
                                border: "1px solid #0000001f",
                                borderRadius: "3px",
                              }}
                            >
                              <img
                                src={image["data_url"]}
                                alt=""
                                width="100"
                                style={{
                                  width: "100%",
                                  height: "100%",
                                  objectFit: "cover",
                                  objectPosition: "center",
                                }}
                              />
                              <button
                                onClick={() => onImageRemove(index)}
                                type="button d-flex flex-column align-items-center justify-content-center"
                                className="btn btn-light"
                                style={{
                                  width: "2rem",
                                  height: "2rem",
                                  borderRadius: "50%",
                                  padding: "0",
                                  position: "absolute",
                                  bottom: "0.2rem",
                                  right: "0.2rem",
                                }}
                              >
                                <FaTrash className="icon m-0" />
                              </button>
                            </div>
                          ))}
                      </div>
                    )}
                  </ImageUploading>
                </div>

                <button
                  type="submit"
                  data-bs-dismiss="modal"
                  className="btn btn-secondary"
                  disabled={images?.length === 0 ? true : false}
                >
                  Submit
                </button>
              </form>
            </div>
          </div>
        </div>
      </div>
    </>
  );
}
