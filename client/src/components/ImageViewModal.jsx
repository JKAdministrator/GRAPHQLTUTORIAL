import { useState, useEffect, useRef, useCallback } from "react";
import { GET_IMAGE } from "../queries/imageQueries";
import { useLazyQuery } from "@apollo/client";
import { TransformWrapper, TransformComponent } from "react-zoom-pan-pinch";

export default function ImageViewModal() {
  const [publicId, setPublicId] = useState("");
  const [secureUrl, setSecureUrl] = useState("");
  const [imageId, setImageId] = useState("");

  const imageModalRef = useRef();

  const [getImageData, { loading, error, data }] = useLazyQuery(GET_IMAGE);

  const onImageModalOpen = useCallback((event) => {
    setImageId(event.relatedTarget.getAttribute("data-bs-image-id"));
  }, []);

  useEffect(() => {
    if (imageModalRef)
      imageModalRef?.current?.addEventListener(
        "show.bs.modal",
        onImageModalOpen
      );
  }, []);

  useEffect(() => {
    if (imageId.length > 0) {
      getImageData({ variables: { id: imageId } }).then((results) => {
        if (results?.data?.image) {
          const imageData = results?.data?.image;
          setSecureUrl(imageData.secure_url ? imageData.secure_url : "");
          setPublicId(imageData.public_id ? imageData.public_id : "");
        }
      });
    } else {
      setSecureUrl("");
      setPublicId("");
    }
  }, [imageId]);

  return (
    <>
      <div
        className="modal fade modal-xl"
        id="imageViewModal"
        aria-labelledby="imageViewModalLabel"
        aria-hidden="true"
        data-bs-backdrop="static"
        data-bs-keyboard="false"
        tabIndex="-1"
        ref={imageModalRef}
      >
        <div className="modal-dialog modal-dialog-scrollable modal-fullscreen-xl-down">
          <div className="modal-content">
            <div className="modal-header">
              <h5 className="modal-title" id="imageViewModalLabel">
                View Image
              </h5>
              <button
                type="button"
                className="btn-close"
                data-bs-dismiss="modal"
                aria-label="Close"
              ></button>
            </div>
            <div className="modal-body">
              <div className="mb-3 d-flex flex-column flex-lg-row gap-2 align-items-lg-center justyfy-content-start">
                <label
                  className="form-label mb-0"
                  style={{
                    whiteSpace: "nowrap",
                    height: "max-content",
                  }}
                >
                  Secure URL
                </label>
                <input
                  type="text"
                  className="form-control"
                  id="name"
                  value={secureUrl}
                  disabled
                  autoComplete="off"
                  placeholder="Autogenerated when the image is created"
                />
                <label
                  className="form-label mb-0"
                  style={{
                    whiteSpace: "nowrap",
                    height: "max-content",
                  }}
                >
                  Public Id
                </label>
                <input
                  type="text"
                  className="form-control"
                  id="detail"
                  value={publicId}
                  disabled
                  autoComplete="off"
                  placeholder="Autogenerated when the image is created"
                  style={{ width: "max-content" }}
                />
              </div>
              <div className="mb-3 d-flex justify-content-center align-items-center">
                <TransformWrapper>
                  <TransformComponent>
                    <img
                      src={secureUrl}
                      alt="test"
                      style={{
                        objectFit: "scale-down",
                        objectPosition: "center",
                        width: "100%",
                        height: "auto",
                      }}
                    />
                  </TransformComponent>
                </TransformWrapper>
              </div>
            </div>
          </div>
        </div>
      </div>
    </>
  );
}
